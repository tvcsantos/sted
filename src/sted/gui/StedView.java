/*
 * StedView.java
 */

package sted.gui;

import java.awt.Color;
import java.util.LinkedList;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import sted.StedApp;
import sted.datastructures.TVShowEntry;
import sted.gui.addshowdialog.AddShowDialog;
import sted.gui.editshowdialog.EditShowDialog;

/**
 * The application's main frame.
 */
public class StedView extends FrameView implements Observer {

    public StedView(SingleFrameApplication app) {
        super(app);
        initComponents();

        entriesTable.setBackground(Color.WHITE);
        entriesTable.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        entriesTable.setEditingRow(0);

        // disable horizontal lines in table
        entriesTable.setShowHorizontalLines(false);
        entriesTable.setShowVerticalLines(false);
        entriesTable.setRowHeight(55);
	entriesTable.setSelectionMode(
                ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        entriesTable.setDefaultRenderer(TVShowEntry.class,
                new TableCellRendererImpl());

        addShowDialog = new AddShowDialog(this, true);
        editShowDialog = new EditShowDialog(this, true);
    }

    public void update(Observable o, Object arg) {
        if (arg instanceof TVShowEntry.State) {
            entriesTable.repaint();
        }
    }    

    public JTable getTable() {
        return entriesTable;
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = StedApp.getApplication().getMainFrame();
            aboutBox = new StedAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        StedApp.getApplication().show(aboutBox);
    }

    public void addTVShowEntry(TVShowEntry entry) {
        entry.addObserver(this);
        entries.add(entry);
        DefaultTableModel model = (DefaultTableModel) entriesTable.getModel();
        model.addRow(new Object[] { entry });
    }

    public void removeTVShowEntry(int position) {
        TVShowEntry theEntry = getTVShowEntry(position);
        theEntry.deleteObserver(this);
        entries.remove(theEntry);
        DefaultTableModel model = (DefaultTableModel) entriesTable.getModel();
        model.removeRow(position);
        theEntry.stopScheduling();
    }

    public TVShowEntry getTVShowEntry(int position) {
        DefaultTableModel model = (DefaultTableModel) entriesTable.getModel();
        return (TVShowEntry) model.getValueAt(position, 0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        checkShowsButton = new javax.swing.JButton();
        checkSubsButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        entriesTable = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        mainPanel.setName("mainPanel"); // NOI18N

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sted.StedApp.class).getContext().getResourceMap(StedView.class);
        addButton.setIcon(resourceMap.getIcon("addButton.icon")); // NOI18N
        addButton.setText(resourceMap.getString("addButton.text")); // NOI18N
        addButton.setFocusable(false);
        addButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addButton.setName("addButton"); // NOI18N
        addButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addButton);

        deleteButton.setIcon(resourceMap.getIcon("deleteButton.icon")); // NOI18N
        deleteButton.setText(resourceMap.getString("deleteButton.text")); // NOI18N
        deleteButton.setFocusable(false);
        deleteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteButton.setName("deleteButton"); // NOI18N
        deleteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(deleteButton);

        editButton.setIcon(resourceMap.getIcon("editButton.icon")); // NOI18N
        editButton.setText(resourceMap.getString("editButton.text")); // NOI18N
        editButton.setFocusable(false);
        editButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editButton.setName("editButton"); // NOI18N
        editButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(editButton);

        checkShowsButton.setIcon(resourceMap.getIcon("checkShowsButton.icon")); // NOI18N
        checkShowsButton.setText(resourceMap.getString("checkShowsButton.text")); // NOI18N
        checkShowsButton.setFocusable(false);
        checkShowsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        checkShowsButton.setName("checkShowsButton"); // NOI18N
        checkShowsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        checkShowsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkShowsButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(checkShowsButton);

        checkSubsButton.setIcon(resourceMap.getIcon("checkSubsButton.icon")); // NOI18N
        checkSubsButton.setText(resourceMap.getString("checkSubsButton.text")); // NOI18N
        checkSubsButton.setFocusable(false);
        checkSubsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        checkSubsButton.setName("checkSubsButton"); // NOI18N
        checkSubsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(checkSubsButton);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        entriesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TV Show Entries"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        entriesTable.setName("entriesTable"); // NOI18N
        entriesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(entriesTable);
        entriesTable.getColumnModel().getColumn(0).setResizable(false);
        entriesTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("entriesTable.columnModel.title0")); // NOI18N
        entriesTable.getColumnModel().getColumn(0).setCellRenderer(new sted.gui.TableCellRendererImpl());

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                        .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(sted.StedApp.class).getContext().getActionMap(StedView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        addShowDialog.setLocationRelativeTo(this.getComponent());
        addShowDialog.setVisible(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int row = entriesTable.getSelectedRow();
        if (!(row >= 0 && row < entriesTable.getRowCount())) return;
        TVShowEntry theEntry = getTVShowEntry(row);
        int result =
                JOptionPane.showOptionDialog(this.getComponent(),
                "Do you really want to delete " +
                theEntry.getTitle() + "?", "sted",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                null, null, null);
        if (result == JOptionPane.YES_OPTION) {
            removeTVShowEntry(row);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        int row = entriesTable.getSelectedRow();
        if (!(row >= 0 && row < entriesTable.getRowCount())) return;
        TVShowEntry theEntry = getTVShowEntry(row);
        //editShowDialog = new EditShowDialog(this.getFrame(), true);
        editShowDialog.setEntry(theEntry);
        editShowDialog.setLocationRelativeTo(this.getComponent());
        editShowDialog.setVisible(true);
    }//GEN-LAST:event_editButtonActionPerformed

    private void checkShowsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkShowsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkShowsButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton checkShowsButton;
    private javax.swing.JButton checkSubsButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JTable entriesTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

    private JDialog aboutBox;

    private AddShowDialog addShowDialog;
    private List<TVShowEntry> entries = new LinkedList<TVShowEntry>();
    private EditShowDialog editShowDialog;
}
